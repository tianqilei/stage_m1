/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro;  

import java.util.List;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Items extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Items\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"itemlist\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"fields\":[{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"url\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"price\",\"type\":\"double\",\"default\":0.0},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"shopId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<avro.Item> itemlist;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Items() {}

  /**
   * All-args constructor.
   */
  public Items(java.util.List<avro.Item> itemlist) {
    this.itemlist = itemlist;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return itemlist;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: itemlist = (java.util.List<avro.Item>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'itemlist' field.
   */
  public java.util.List<avro.Item> getItemlist() {
    return itemlist;
  }

  /**
   * Sets the value of the 'itemlist' field.
   * @param value the value to set.
   */
  public void setItemlist(java.util.List<avro.Item> value) {
    this.itemlist = value;
  }

  /** Creates a new Items RecordBuilder */
  public static avro.Items.Builder newBuilder() {
    return new avro.Items.Builder();
  }
  
  /** Creates a new Items RecordBuilder by copying an existing Builder */
  public static avro.Items.Builder newBuilder(avro.Items.Builder other) {
    return new avro.Items.Builder(other);
  }
  
  /** Creates a new Items RecordBuilder by copying an existing Items instance */
  public static avro.Items.Builder newBuilder(avro.Items other) {
    return new avro.Items.Builder(other);
  }
  
  /**
   * RecordBuilder for Items instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Items>
    implements org.apache.avro.data.RecordBuilder<Items> {

    private java.util.List<avro.Item> itemlist;

    /** Creates a new Builder */
    private Builder() {
      super(avro.Items.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.Items.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.itemlist)) {
        this.itemlist = (List<Item>) data().deepCopy(fields()[0].schema(), other.itemlist);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Items instance */
    private Builder(avro.Items other) {
            super(avro.Items.SCHEMA$);
      if (isValidValue(fields()[0], other.itemlist)) {
        this.itemlist = (List<Item>) data().deepCopy(fields()[0].schema(), other.itemlist);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'itemlist' field */
    public java.util.List<avro.Item> getItemlist() {
      return itemlist;
    }
    
    /** Sets the value of the 'itemlist' field */
    public avro.Items.Builder setItemlist(java.util.List<avro.Item> value) {
      validate(fields()[0], value);
      this.itemlist = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'itemlist' field has been set */
    public boolean hasItemlist() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'itemlist' field */
    public avro.Items.Builder clearItemlist() {
      itemlist = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Items build() {
      try {
        Items record = new Items();
        record.itemlist = fieldSetFlags()[0] ? this.itemlist : (java.util.List<avro.Item>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
