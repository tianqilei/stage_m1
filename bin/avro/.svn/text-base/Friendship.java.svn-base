/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro;  

import java.util.List;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Friendship extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Friendship\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"friendship\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.lang.String> friendship;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Friendship() {}

  /**
   * All-args constructor.
   */
  public Friendship(java.util.List<java.lang.String> friendship) {
    this.friendship = friendship;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return friendship;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: friendship = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'friendship' field.
   */
  public java.util.List<java.lang.String> getFriendship() {
    return friendship;
  }

  /**
   * Sets the value of the 'friendship' field.
   * @param value the value to set.
   */
  public void setFriendship(java.util.List<java.lang.String> value) {
    this.friendship = value;
  }

  /** Creates a new Friendship RecordBuilder */
  public static avro.Friendship.Builder newBuilder() {
    return new avro.Friendship.Builder();
  }
  
  /** Creates a new Friendship RecordBuilder by copying an existing Builder */
  public static avro.Friendship.Builder newBuilder(avro.Friendship.Builder other) {
    return new avro.Friendship.Builder(other);
  }
  
  /** Creates a new Friendship RecordBuilder by copying an existing Friendship instance */
  public static avro.Friendship.Builder newBuilder(avro.Friendship other) {
    return new avro.Friendship.Builder(other);
  }
  
  /**
   * RecordBuilder for Friendship instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Friendship>
    implements org.apache.avro.data.RecordBuilder<Friendship> {

    private java.util.List<java.lang.String> friendship;

    /** Creates a new Builder */
    private Builder() {
      super(avro.Friendship.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.Friendship.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.friendship)) {
        this.friendship = (List<String>) data().deepCopy(fields()[0].schema(), other.friendship);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Friendship instance */
    private Builder(avro.Friendship other) {
            super(avro.Friendship.SCHEMA$);
      if (isValidValue(fields()[0], other.friendship)) {
        this.friendship = (List<String>) data().deepCopy(fields()[0].schema(), other.friendship);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'friendship' field */
    public java.util.List<java.lang.String> getFriendship() {
      return friendship;
    }
    
    /** Sets the value of the 'friendship' field */
    public avro.Friendship.Builder setFriendship(java.util.List<java.lang.String> value) {
      validate(fields()[0], value);
      this.friendship = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'friendship' field has been set */
    public boolean hasFriendship() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'friendship' field */
    public avro.Friendship.Builder clearFriendship() {
      friendship = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Friendship build() {
      try {
        Friendship record = new Friendship();
        record.friendship = fieldSetFlags()[0] ? this.friendship : (java.util.List<java.lang.String>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
