/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro;  

import java.util.List;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ItemUsrs extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ItemUsrs\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"itemid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"userlist\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"UsrBuy\",\"fields\":[{\"name\":\"usrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"sex\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"age\",\"type\":\"int\",\"default\":0},{\"name\":\"buy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String itemid;
  @Deprecated public java.util.List<avro.UsrBuy> userlist;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ItemUsrs() {}

  /**
   * All-args constructor.
   */
  public ItemUsrs(java.lang.String itemid, java.util.List<avro.UsrBuy> userlist) {
    this.itemid = itemid;
    this.userlist = userlist;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return itemid;
    case 1: return userlist;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: itemid = (java.lang.String)value$; break;
    case 1: userlist = (java.util.List<avro.UsrBuy>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'itemid' field.
   */
  public java.lang.String getItemid() {
    return itemid;
  }

  /**
   * Sets the value of the 'itemid' field.
   * @param value the value to set.
   */
  public void setItemid(java.lang.String value) {
    this.itemid = value;
  }

  /**
   * Gets the value of the 'userlist' field.
   */
  public java.util.List<avro.UsrBuy> getUserlist() {
    return userlist;
  }

  /**
   * Sets the value of the 'userlist' field.
   * @param value the value to set.
   */
  public void setUserlist(java.util.List<avro.UsrBuy> value) {
    this.userlist = value;
  }

  /** Creates a new ItemUsrs RecordBuilder */
  public static avro.ItemUsrs.Builder newBuilder() {
    return new avro.ItemUsrs.Builder();
  }
  
  /** Creates a new ItemUsrs RecordBuilder by copying an existing Builder */
  public static avro.ItemUsrs.Builder newBuilder(avro.ItemUsrs.Builder other) {
    return new avro.ItemUsrs.Builder(other);
  }
  
  /** Creates a new ItemUsrs RecordBuilder by copying an existing ItemUsrs instance */
  public static avro.ItemUsrs.Builder newBuilder(avro.ItemUsrs other) {
    return new avro.ItemUsrs.Builder(other);
  }
  
  /**
   * RecordBuilder for ItemUsrs instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ItemUsrs>
    implements org.apache.avro.data.RecordBuilder<ItemUsrs> {

    private java.lang.String itemid;
    private java.util.List<avro.UsrBuy> userlist;

    /** Creates a new Builder */
    private Builder() {
      super(avro.ItemUsrs.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.ItemUsrs.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.itemid)) {
        this.itemid = (String) data().deepCopy(fields()[0].schema(), other.itemid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userlist)) {
        this.userlist = (List<UsrBuy>) data().deepCopy(fields()[1].schema(), other.userlist);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ItemUsrs instance */
    private Builder(avro.ItemUsrs other) {
            super(avro.ItemUsrs.SCHEMA$);
      if (isValidValue(fields()[0], other.itemid)) {
        this.itemid = (String) data().deepCopy(fields()[0].schema(), other.itemid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userlist)) {
        this.userlist = (List<UsrBuy>) data().deepCopy(fields()[1].schema(), other.userlist);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'itemid' field */
    public java.lang.String getItemid() {
      return itemid;
    }
    
    /** Sets the value of the 'itemid' field */
    public avro.ItemUsrs.Builder setItemid(java.lang.String value) {
      validate(fields()[0], value);
      this.itemid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'itemid' field has been set */
    public boolean hasItemid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'itemid' field */
    public avro.ItemUsrs.Builder clearItemid() {
      itemid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'userlist' field */
    public java.util.List<avro.UsrBuy> getUserlist() {
      return userlist;
    }
    
    /** Sets the value of the 'userlist' field */
    public avro.ItemUsrs.Builder setUserlist(java.util.List<avro.UsrBuy> value) {
      validate(fields()[1], value);
      this.userlist = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'userlist' field has been set */
    public boolean hasUserlist() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'userlist' field */
    public avro.ItemUsrs.Builder clearUserlist() {
      userlist = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public ItemUsrs build() {
      try {
        ItemUsrs record = new ItemUsrs();
        record.itemid = fieldSetFlags()[0] ? this.itemid : (java.lang.String) defaultValue(fields()[0]);
        record.userlist = fieldSetFlags()[1] ? this.userlist : (java.util.List<avro.UsrBuy>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
