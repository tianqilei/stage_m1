/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro;  

import java.util.List;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Usrs extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Usrs\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"userlist\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Usr\",\"fields\":[{\"name\":\"usrId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"sex\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"age\",\"type\":\"int\",\"default\":0}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<avro.Usr> userlist;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Usrs() {}

  /**
   * All-args constructor.
   */
  public Usrs(java.util.List<avro.Usr> userlist) {
    this.userlist = userlist;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userlist;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userlist = (java.util.List<avro.Usr>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userlist' field.
   */
  public java.util.List<avro.Usr> getUserlist() {
    return userlist;
  }

  /**
   * Sets the value of the 'userlist' field.
   * @param value the value to set.
   */
  public void setUserlist(java.util.List<avro.Usr> value) {
    this.userlist = value;
  }

  /** Creates a new Usrs RecordBuilder */
  public static avro.Usrs.Builder newBuilder() {
    return new avro.Usrs.Builder();
  }
  
  /** Creates a new Usrs RecordBuilder by copying an existing Builder */
  public static avro.Usrs.Builder newBuilder(avro.Usrs.Builder other) {
    return new avro.Usrs.Builder(other);
  }
  
  /** Creates a new Usrs RecordBuilder by copying an existing Usrs instance */
  public static avro.Usrs.Builder newBuilder(avro.Usrs other) {
    return new avro.Usrs.Builder(other);
  }
  
  /**
   * RecordBuilder for Usrs instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Usrs>
    implements org.apache.avro.data.RecordBuilder<Usrs> {

    private java.util.List<avro.Usr> userlist;

    /** Creates a new Builder */
    private Builder() {
      super(avro.Usrs.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.Usrs.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userlist)) {
        this.userlist = (List<Usr>) data().deepCopy(fields()[0].schema(), other.userlist);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Usrs instance */
    private Builder(avro.Usrs other) {
            super(avro.Usrs.SCHEMA$);
      if (isValidValue(fields()[0], other.userlist)) {
        this.userlist = (List<Usr>) data().deepCopy(fields()[0].schema(), other.userlist);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'userlist' field */
    public java.util.List<avro.Usr> getUserlist() {
      return userlist;
    }
    
    /** Sets the value of the 'userlist' field */
    public avro.Usrs.Builder setUserlist(java.util.List<avro.Usr> value) {
      validate(fields()[0], value);
      this.userlist = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'userlist' field has been set */
    public boolean hasUserlist() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'userlist' field */
    public avro.Usrs.Builder clearUserlist() {
      userlist = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Usrs build() {
      try {
        Usrs record = new Usrs();
        record.userlist = fieldSetFlags()[0] ? this.userlist : (java.util.List<avro.Usr>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
