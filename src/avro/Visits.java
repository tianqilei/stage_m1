/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro;  

import java.util.List;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Visits extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Visits\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"visit\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Visit\",\"fields\":[{\"name\":\"itemId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"time\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"date\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"buy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<avro.Visit> visit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Visits() {}

  /**
   * All-args constructor.
   */
  public Visits(java.util.List<avro.Visit> visit) {
    this.visit = visit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return visit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: visit = (java.util.List<avro.Visit>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'visit' field.
   */
  public java.util.List<avro.Visit> getVisit() {
    return visit;
  }

  /**
   * Sets the value of the 'visit' field.
   * @param value the value to set.
   */
  public void setVisit(java.util.List<avro.Visit> value) {
    this.visit = value;
  }

  /** Creates a new Visits RecordBuilder */
  public static avro.Visits.Builder newBuilder() {
    return new avro.Visits.Builder();
  }
  
  /** Creates a new Visits RecordBuilder by copying an existing Builder */
  public static avro.Visits.Builder newBuilder(avro.Visits.Builder other) {
    return new avro.Visits.Builder(other);
  }
  
  /** Creates a new Visits RecordBuilder by copying an existing Visits instance */
  public static avro.Visits.Builder newBuilder(avro.Visits other) {
    return new avro.Visits.Builder(other);
  }
  
  /**
   * RecordBuilder for Visits instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Visits>
    implements org.apache.avro.data.RecordBuilder<Visits> {

    private java.util.List<avro.Visit> visit;

    /** Creates a new Builder */
    private Builder() {
      super(avro.Visits.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.Visits.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.visit)) {
        this.visit = (List<Visit>) data().deepCopy(fields()[0].schema(), other.visit);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Visits instance */
    private Builder(avro.Visits other) {
            super(avro.Visits.SCHEMA$);
      if (isValidValue(fields()[0], other.visit)) {
        this.visit = (List<Visit>) data().deepCopy(fields()[0].schema(), other.visit);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'visit' field */
    public java.util.List<avro.Visit> getVisit() {
      return visit;
    }
    
    /** Sets the value of the 'visit' field */
    public avro.Visits.Builder setVisit(java.util.List<avro.Visit> value) {
      validate(fields()[0], value);
      this.visit = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'visit' field has been set */
    public boolean hasVisit() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'visit' field */
    public avro.Visits.Builder clearVisit() {
      visit = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public Visits build() {
      try {
        Visits record = new Visits();
        record.visit = fieldSetFlags()[0] ? this.visit : (java.util.List<avro.Visit>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
